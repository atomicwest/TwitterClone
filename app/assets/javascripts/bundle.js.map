{"version":3,"sources":["webpack/bootstrap de45ecf710a2cfe4e637","./frontend/twitter.js","./frontend/follow_toggle.js","./frontend/users_search.js","./frontend/TweetCompose.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA,EAAC;;;;;;;ACZD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB,sBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;;;;AAIA;;;;;;;ACjEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,iBAAgB,kBAAkB;;AAElC;AACA;AACA,gCAA+B,YAAY;AAC3C;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B,gEAA+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAmD,yCAAyC;AAC5F;AACA;AACA,oBAAmB,QAAQ,KAAK,KAAK;AACrC;AACA;AACA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap de45ecf710a2cfe4e637\n **/","const FollowToggle = require(\"./follow_toggle.js\");\nconst UsersSearch = require(\"./users_search.js\");\nconst TweetCompose = require(\"./TweetCompose.js\");\n\n$(function () {\n  $(\"button.follow-toggle\").each((index, element) => {\n    new FollowToggle($(element));\n  });\n\n  $(\"nav.users-search\").each((index, element) => new UsersSearch(element));\n\n  $(\"form.tweet-compose\").each((index, element) => new TweetCompose(element));\n} );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/twitter.js\n ** module id = 1\n ** module chunks = 0\n **/","class FollowToggle {\n  constructor($button, obj){\n\n    this.button = $button;\n\n    if (obj) {\n      this.followState = obj.followState;\n      this.userId = obj.userId;\n    } else {\n      this.followState = $('.follow-toggle' ).data(\"initial-follow-state\");\n      this.userId = $('.follow-toggle' ).data(\"user-id\");\n    }\n\n    // console.log(this.followState);\n    this.render();\n    this.button.on(\"click\", this.handleClick.bind(this));\n  }\n\n  render() {\n    this.button.prop('disabled', false);\n    if (this.followState === \"unfollowed\") {\n      this.button.text(\"Follow\");\n      // this.nextState = \"followed\";\n      this.button.data(\"follow-state\",  \"unfollowed\");\n      this.button.data(\"initial-follow-state\",  \"unfollowed\");\n    } else {\n      this.button.text(\"Unfollow\");\n      // this.nextState = \"unfollowed\";\n      this.button.data(\"follow-state\", \"follow\");\n      this.button.data(\"initial-follow-state\", \"follow\");\n    }\n  }\n\n  toggleState(){\n    if (this.followState === \"unfollowed\") {\n      this.followState = \"follow\";\n    } else {\n      this.followState = \"unfollowed\";\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.button.prop('disabled', true);\n    let method = \"POST\";\n\n    if (this.followState === \"follow\") {\n      method = \"DELETE\";\n    }\n\n    $.ajax({\n      method: `${method}`,\n      url: `/users/${this.userId}/follow`,\n      dataType: 'json',\n      success: () => {\n        this.toggleState();\n        this.render();\n      }\n\n    });\n  }\n}\n\n\n\nmodule.exports = FollowToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/follow_toggle.js\n ** module id = 2\n ** module chunks = 0\n **/","const FollowToggle = require('./follow_toggle.js');\n\nclass UsersSearch {\n  constructor (nav) {\n    this.nav = $(nav);\n    this.input = this.nav.find('input');\n    this.ul = this.nav.find('.users');\n    this.input.keyup(this.handleInput.bind(this));\n  }\n\n  handleInput (event) {\n    // if (this.input.val() === \"\") {\n    //   this.renderResults([]);\n    //   return;\n    // }\n    // event.preventDefault();\n    this.input = this.nav.find('input');\n    // console.log(this.input.val());\n    let param = { query: this.input.val() };\n    $.ajax({\n      url: `/users/search`,\n      method: 'GET',\n      dataType: 'json',\n      data: param,\n      success: this.renderResults.bind(this)\n    });\n  }\n\n  renderResults(users){\n    this.ul.empty();\n    for(let i=0; i < users.length; i++) {\n\n      let li = $('<li>');\n      let a = $('<a>').text(users[i].username);\n      a.attr('href', `/users/${users[i].id}`);\n      li.append(a);\n\n      // $('ul.users').append(li);\n\n\n      // let button = $('<button>');\n      // button.addClass('follow-toggle');\n      // button.data('user-id', users[i].id);\n      // let state = users[i].followed ?  \"follow\" : \"unfollowed\";\n      // console.log(users[i].followed);\n      // button.data('initial-follow-state', state);\n\n      let $followToggle = $(\"<button></button>\");\n        new FollowToggle($followToggle, {\n          userId: users[i].id,\n          followState: users[i].followed ? \"followed\" : \"unfollowed\"\n        });\n\n      li.append($followToggle);\n      this.ul.append(li);\n\n    }\n    $(\"button.follow-toggle\").each((index, element) => {\n      new FollowToggle($(element));\n    });\n  }\n\n}\n\nmodule.exports = UsersSearch;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/users_search.js\n ** module id = 3\n ** module chunks = 0\n **/","class TweetCompose {\n  constructor(element){\n    this.$form = $(element);\n    this.$form.submit(this.submit.bind(this));\n    this.$form.find(\".content\").keyup(this.countChars.bind(this));\n  }\n\n  countChars(event) {\n    let content = this.$form.find(\".content\")[0];\n    let charsLeft = 140 - content.value.length;\n    let strongEl = $('.chars-left');\n    if (charsLeft <= 0) {\n      content.value = (content.value.slice(0,140));\n      strongEl.text(\"Message is over character limit\");\n    } else {\n      strongEl.text(charsLeft);\n    }\n  }\n\n  submit(event) {\n    event.preventDefault();\n    this.serial = this.$form.serializeJSON();\n    // console.log(serial.tweet.mentioned_user_ids[0]);\n    this.request = {tweet: { content: this.serial.tweet.content,\n      mentioned_user_ids: this.serial.tweet.mentioned_user_ids} };\n\n    $(\":input\").each( (i,e) => $(e).prop('disabled', true) );\n    // $(\":input\").each( (i,e) => console.log(e));\n    $.ajax({\n      method: 'POST',\n      url: '/tweets',\n      data: this.request,\n      dataType: 'json',\n      success: this.handleSuccess.bind(this)\n    });\n  }\n\n  clearInput() {\n    $(\":input\").empty();\n  }\n\n  handleSuccess() {\n    $(\":input\").each( (i,e) => $(e).prop('disabled', false) );\n    this.clearInput();\n\n    // let $aCurrent = $(<a>)\n    // $aCurrent.attr(\"href\", window.location.pathname)\n    // $aCurrent.text(\"\")\n    // let $aOther = $(<a>).attr(\"href\", `/users/${this.request.tweet.mentioned_user_ids[0]}`)\n    let message = this.request.tweet.content;\n    let time = new Date();\n    let tweet = `${message} @ ${time}`;\n    let $li = $('<li>');\n    $li.append(tweet);\n    $('#feed').prepend($li);\n  }\n\n}\n\nmodule.exports = TweetCompose;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/TweetCompose.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}